{"version":3,"file":"main.55a812170c87194db57a.hot-update.js","sources":["webpack:///./src/components/Datepicker.jsx"],"sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\";\n\n//Assets\nimport DoubleLeft from \"../assets/double-left.svg\"\nimport DoubleRight from \"../assets/double-right.svg\"\nimport Left from \"../assets/left.svg\"\nimport Right from \"../assets/right.svg\"\n\nconst LABEL = styled.label`\n    margin-right: 5px;\n    ${(props) => props.customStyle}\n`\n\nconst INPUT = styled.input`\n    ${(props) => props.customStyle}\n\n    ::placeholder {\n        ${(props) => props.customPlaceholder}\n    }\n`\n\nconst DATEPICKER = styled.div`\n    position: absolute;\n    margin-top: 2px;\n    display: flex;\n    width: 300px;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    background: #FFF;\n    border: solid 1px;\n    padding: 5px;\n    ${(props) => props.customStyle}\n`\n\nconst HEADER = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    padding-bottom: 10px;\n    padding-top: 5px;\n    ${(props) => props.customStyle}\n`\n\nconst IMG = styled.img`\n    height: 20px;\n    cursor: pointer;\n    ${(props) => props.customStyle}\n`\n\nconst YEAR = styled.div`\n    display: flex;\n    justify-content: center;\n    font-size: 20px;\n    ${(props) => props.customStyle}\n`\n\nconst MONTH = styled.div`\n    display: flex;\n    justify-content: center;\n    ${(props) => props.customStyle}\n`\n\nconst NAMEDAYS = styled.div`\n    display: flex;\n    width: 100%;\n    ${(props) => props.customStyle}\n`\n\nconst NAMEDAY = styled.div`\n    flex: 1 1 14%;\n    display: flex;\n    justify-content: center;\n    font-weight: bold;\n    padding-bottom: 5px;\n    ${(props) => props.customStyle}\n`\n\nconst DAYS = styled.div`\n    display: flex;\n    width: 100%;\n    flex-wrap: wrap;\n    ${(props) => props.customStyle}\n`\n\nconst TODAY = styled.div`\n    cursor: pointer;\n    flex: 1 1 14%;\n    display: flex;\n    justify-content: center;\n    background-color: #F00;\n    color: #FFF;\n    ${(props) => props.customStyle}\n`\n\nconst DAY = styled.div`\n    cursor: pointer;\n    flex: 1 1 14%;\n    display: flex;\n    justify-content: center;\n    :hover {\n        background-color: #F00;\n        ${(props) => props.customHover}\n    }\n    ${(props) => props.customStyle}\n`\n\nconst OUTSIDEDAY = styled.div`\n    color: rgba(0,0,0,.5);\n    flex: 1 1 14%;\n    display: flex;\n    justify-content: center;\n    ${(props) => props.customStyle}\n`\n\n/**\n* @param {object} props - Props\n* @param {date} date - To set up the date\n* @param {string} doubleLeft - To change the default double left image\n* @param {string} doubleRight - To change the default double right image\n* @param {string} label - To change the label\n* @param {string} left - To change the default left image\n* @param {string} placeholder - To change the placeholder\n* @param {string} right - To change the default right image\n* @param {object} styleArrow- To customize the img style\n* @param {object} styleContainerNameDay - To customize the container style that contains the day names\n* @param {object} styleContainerNumberDay - To customize the container style that contains the day numbers\n* @param {object} styleDatePicker - To customize the datepicker container style\n* @param {object} styleHeader - To customize the header style of datepicker\n* @param {object} styleHover - To customize the hover day style\n* @param {object} styleInput - To customize the input\n* @param {object} styleLabel - To change the label style\n* @param {object} styleMonth - To customize the style of the month displayed\n* @param {object} styleNameDay - To customize the style of the day names\n* @param {object} styleNumberDay - To customize the style of the days of the current month\n* @param {object} styleOutsideDay - To customize the style of days that do not belong to the current month\n* @param {object} stylePlaceholder - To change the placeholder style\n* @param {object} styleSelectedDay - To customize the selected day style\n* @param {object} styleYear - To customize the style of the year displayed\n* @returns {component} - Date picker\n*/\n\nfunction Datepicker ({ date, doubleLeft, doubleRight, id, label, left, placeholder, right, styleArrow, styleContainerNameDay, styleContainerNumberDay, styleDatePicker, styleHeader, styleHover, styleInput, styleLabel, styleMonth, styleNameDay, styleNumberDay, styleOutsideDay, stylePlaceholder, styleSelectedDay, styleYear }) {\n    const [seletedDate, setSeletedDate] = useState(date)\n    const [seletedDay, setSeletedDay] = useState(seletedDate.toDateString().substring(8,10))\n    const [seletedMonth, setSeletedMonth] = useState(seletedDate.toDateString().substring(8,10))\n    const [seletedYear, setSeletedYear] = useState(seletedDate.toDateString().substring(11,15))\n    const [active, setActive] = useState(false)\n    const [year, setYear] = useState(date.getFullYear())\n    const [month, setMonth] = useState(date.getMonth())\n    const [nbDays, setnbDays] = useState(40 - new Date(year, month, 40).getDate())\n    const [firstDay, setfirstDay] = useState(new Date(year, month, 1).toDateString().substring(0,3))\n    const [previousMonthDays, setPreviousMonthDays] = useState([])\n    const [monthDays, setMonthDays] = useState([])\n    const [nextMonthDays, setNextMonthDays] = useState([])\n\n    const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n\n    useEffect(() => {\n        monthDetails()\n    },[])\n\n    useEffect(() => {\n        setSeletedDay(seletedDate.toDateString().substring(8,10))\n        setSeletedMonth(seletedDate.toDateString().substring(4,7))\n        setSeletedYear(seletedDate.toDateString().substring(11,15))\n    },[seletedDate])\n\n    const monthDetails = () => {\n        const previousMonth = []\n        const endPreviousMonth = 40 - new Date(year, month - 1, 40).getDate()\n        const indexBegin = days.indexOf(firstDay)\n        for (let i = indexBegin-1; i >= 0; i--) {\n            previousMonth.push(endPreviousMonth - i)\n        }\n        setPreviousMonthDays(previousMonth)\n\n        const currentMonth = []\n        for (let i = 1; i <= nbDays; i++) {\n            currentMonth.push(i)\n        }\n        setMonthDays(currentMonth)\n\n        const nextMonth = []\n        const endArray = 42 - currentMonth.length - previousMonth.length\n        for (let i = 1; i <= endArray; i++) {\n            nextMonth.push(i)\n        }\n        setNextMonthDays(nextMonth)\n    }\n\n    const changeMonth = (nb) => {\n        if (month + nb === 12) {\n            setYear(year + 1)\n            setMonth(0)\n        } else if (month + nb === -1) {\n            setMonth(11)\n            setYear(year - 1)\n        } else {\n            setMonth(month + nb)\n        }\n    }\n\n    const changeYear = (nb) => {\n        setYear(year + nb)\n    }\n\n    useEffect(() => {\n        setnbDays(40 - new Date(year, month, 40).getDate())\n        setfirstDay(new Date(year, month, 1).toDateString().substring(0,3))\n    },[year, month])\n\n    useEffect(() => {\n        monthDetails()\n    },[firstDay])\n\n    const selectDate = (e) => {\n        let day = e.target.innerHTML\n        setSeletedDate(new Date(year, month, day))\n        day = day.length === 1 ? \"0\" + day : day\n        const displayMonth = ((month + 1).toString().length) === 1 ? \"0\" + (month + 1) : (month + 1)\n        document.getElementById(id).value = displayMonth + \"/\" + day + \"/\" + year\n        setActive(false)\n    }\n\n    useEffect((e) => {\n        const close = () => {\n            console.log(document.querySelectorAll(\".\" + id))\n            /*if (document.querySelectorAll(\".\" + id + \">*\").innerHTML === name) {\n                setActive(false)\n            }*/\n            window.removeEventListener(\"click\", close)\n        }\n\n        active && window.addEventListener(\"click\", close)\n    }, [active])\n\n\n    return (\n        <Fragment>\n            {label !== \"\" && <LABEL customStyle = {styleLabel}>{label}</LABEL>}\n            <INPUT id = {id} customStyle = {styleInput} customPlaceholder = {stylePlaceholder} placeholder = {placeholder} onClick = {() => setActive(true)}/>\n            {active ?\n                <DATEPICKER customStyle = {styleDatePicker}>\n                    <HEADER customStyle = {styleHeader}>\n                        <IMG customStyle = {styleArrow} onClick = {() => changeYear(-1)} src = {doubleLeft}/>\n                        <IMG customStyle = {styleArrow} onClick = {() => changeMonth(-1)}  src = {left}/>\n                        <div>\n                            <YEAR customStyle = {styleYear} >{year}</YEAR>\n                            <MONTH customStyle = {styleMonth}>{months[month]}</MONTH>\n                        </div>\n                        <IMG customStyle = {styleArrow} onClick = {() => changeMonth(1)} src = {right}/>\n                        <IMG customStyle = {styleArrow} onClick = {() => changeYear(1)} src = {doubleRight}/>\n                    </HEADER>\n                    <NAMEDAYS customStyle = {styleContainerNameDay}>\n                        {days.map((day, index) => (\n                            <NAMEDAY customStyle = {styleNameDay} key = {index}>\n                                {day}\n                            </NAMEDAY>\n                        ))}\n                    </NAMEDAYS>\n                    <DAYS customStyle = {styleContainerNumberDay}>\n                        {previousMonthDays.map((previousMonthDay, index) => (\n                            <OUTSIDEDAY customStyle = {styleOutsideDay} key = {index}>\n                                {previousMonthDay}\n                            </OUTSIDEDAY>\n                        ))}\n                        {monthDays.map((monthDay, index) => (\n                            (monthDay == seletedDay && months[month].substring(0,3) === seletedMonth && year == seletedYear) ?\n                                <TODAY customStyle = {styleSelectedDay} key = {index} onClick = {(e) => selectDate(e)}>\n                                    {monthDay}\n                                </TODAY>\n                            :\n                                <DAY customStyle = {styleNumberDay} customHover = {styleHover} key = {index} onClick = {(e) => selectDate(e)}>\n                                    {monthDay}\n                                </DAY>\n                        ))}\n                        {nextMonthDays.map((nextMonthDay, index) => (\n                            <OUTSIDEDAY customStyle = {styleOutsideDay} key = {index}>\n                                {nextMonthDay}\n                            </OUTSIDEDAY>\n                        ))}\n                    </DAYS>\n                </DATEPICKER>\n            :\n                null\n            }\n        </Fragment>\n    )\n}\n\nDatepicker.propTypes = {\n    date: PropTypes.instanceOf(Date).isRequired,\n    doubleLeft: PropTypes.string,\n    doubleRight: PropTypes.string,\n    id: PropTypes.string, \n    label: PropTypes.string,\n    left: PropTypes.string,\n    placeholder: PropTypes.string,\n    right: PropTypes.string,\n    styleArrow: PropTypes.object,\n    styleContainerNameDay: PropTypes.object,\n    styleContainerNumberDay: PropTypes.object,\n    styleDatePicker: PropTypes.object,\n    styleHeader: PropTypes.object,\n    styleHover: PropTypes.object,\n    styleInput: PropTypes.object,\n    styleLabel: PropTypes.object,\n    styleMonth: PropTypes.object,\n    styleNameDay: PropTypes.object,\n    styleNumberDay: PropTypes.object,\n    styleOutsideDay: PropTypes.object,\n    stylePlaceholder: PropTypes.object,\n    styleSelectedDay: PropTypes.object,\n    styleYear: PropTypes.object,\n}\n\nDatepicker.defaultProps = {\n    doubleLeft: DoubleLeft,\n    doubleRight: DoubleRight,\n    id: \"datepicker\",\n    label: \"\",\n    placeholder: \"\",\n    left: Left,\n    right: Right,\n    styleArrow: {},\n    styleContainerNameDay: {},\n    styleContainerNumberDay: {},\n    styleDatePicker: {},\n    styleHeader: {},\n    styleHover: {},\n    styleInput: {},\n    styleLabel: {},\n    styleMonth: {},\n    styleNameDay: {},\n    styleNumberDay: {},\n    styleOutsideDay: {},\n    stylePlaceholder: {},\n    styleSelectedDay: {},\n    styleYear: {},\n}\n\nexport default Datepicker\n\n/*useEffect((e) => {\n        const escape = (e) => {\n            if (e.key === \"Escape\") {\n                setActive(false)\n                window.removeEventListener(\"keydown\", escape)\n                window.removeEventListener(\"click\", close)\n                document.getElementById(\"datepicker\").blur()\n                setId(\"\")\n            }\n        }\n\n        const close = (e) => {\n            if (!e.target.classList.contains(\"in\")) {\n                setActive(false)\n                window.removeEventListener(\"keydown\", escape)\n                window.removeEventListener(\"click\", close)\n                setId(\"\")\n            }\n        }\n\n        if (active) {\n            setId(\"datepicker\")\n            window.addEventListener(\"keydown\", escape)\n            window.addEventListener(\"click\", close)\n        }\n    },[active])*/"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AAEA;AAAA;AAGA;AACA;AAAA;AAGA;AAAA;AAIA;AAWA;AAAA;AAGA;AAOA;AAAA;AAGA;AAGA;AAAA;AAGA;AAIA;AAAA;AAGA;AAGA;AAAA;AAGA;AAGA;AAAA;AAGA;AAMA;AAAA;AAGA;AAIA;AAAA;AAGA;AAOA;AAAA;AAGA;AAOA;AAAA;AAEA;AAAA;AAGA;AAKA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAUA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AADA;AAOA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAUA;AACA;AAAA;AAAA;AADA;AAhBA;AAlBA;AAJA;AAkDA;AACA;AArJA;AAsJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;A","sourceRoot":""}