{"version":3,"file":"main.6c898c15772797675011.hot-update.js","sources":["webpack:///./src/components/Datepicker.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport PropTypes from \"prop-types\";\r\n\r\n//Assets\r\nimport DoubleLeft from \"../assets/double-left.svg\"\r\nimport DoubleRight from \"../assets/double-right.svg\"\r\nimport Left from \"../assets/left.svg\"\r\nimport Right from \"../assets/right.svg\"\r\n\r\nconst CONTAINER = styled.div`\r\n    position: relative;\r\n`\r\nconst LABEL = styled.label`\r\n    margin-right: 5px;\r\n    ${(props) => props.customStyle}\r\n`\r\n\r\nconst INPUT = styled.input`\r\n    ${(props) => props.customStyle}\r\n`\r\n\r\nconst DATEPICKER = styled.div`\r\n    position: absolute;\r\n    margin-top: 2px;\r\n    display: flex;\r\n    width: 300px;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: #FFF;\r\n    border: solid 1px;\r\n    padding: 5px;\r\n    ${(props) => props.customStyle}\r\n`\r\n\r\nconst HEADER = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    padding-bottom: 10px;\r\n    padding-top: 5px;\r\n    ${(props) => props.customStyle}\r\n`\r\n\r\nconst IMG = styled.img`\r\n    height: 20px;\r\n    cursor: pointer;\r\n    ${(props) => props.customStyle}\r\n`\r\n\r\nconst YEAR = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 20px;\r\n    ${(props) => props.customStyle}\r\n`\r\n\r\nconst MONTH = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    ${(props) => props.customStyle}\r\n`\r\n\r\nconst NAMEDAYS = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    ${(props) => props.customStyle}\r\n`\r\n\r\nconst NAMEDAY = styled.div`\r\n    flex: 1 1 14%;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-weight: bold;\r\n    padding-bottom: 5px;\r\n    ${(props) => props.customStyle}\r\n`\r\n\r\nconst DAYS = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    flex-wrap: wrap;\r\n    ${(props) => props.customStyle}\r\n`\r\n\r\nconst TODAY = styled.div`\r\n    cursor: pointer;\r\n    flex: 1 1 14%;\r\n    display: flex;\r\n    justify-content: center;\r\n    background-color: #F00;\r\n    color: #FFF;\r\n    ${(props) => props.customStyle}\r\n`\r\n\r\nconst DAY = styled.div`\r\n    cursor: pointer;\r\n    flex: 1 1 14%;\r\n    display: flex;\r\n    justify-content: center;\r\n    :hover {\r\n        background-color: #F00;\r\n    }\r\n    ${(props) => props.customStyle}\r\n`\r\n\r\nconst OUTSIDEDAY = styled.div`\r\n    color: rgba(0,0,0,.5);\r\n    flex: 1 1 14%;\r\n    display: flex;\r\n    justify-content: center;\r\n    ${(props) => props.customStyle}\r\n`\r\n\r\n/**\r\n* @param {object} props - Props\r\n* @param {date} date - To set up the date\r\n* @param {string} doubleLeft - To change the default double left image\r\n* @param {string} doubleRight - To change the default double right image\r\n* @param {string} label - To change the label\r\n* @param {string} left - To change the default left image\r\n* @param {string} placeholder - To change the placeholder\r\n* @param {string} right - To change the default right image\r\n* @param {object} styleArrow- To customize the img style\r\n* @param {object} styleContainerNameDay - To customize the container style that contains the day names\r\n* @param {object} styleContainerNumberDay - To customize the container style that contains the day numbers\r\n* @param {object} styleDatePicker - To customize the datepicker container style\r\n* @param {object} styleHeader - To customize the header style of datepicker\r\n* @param {object} styleInput - To customize the input\r\n* @param {object} styleLabel - To change the label style\r\n* @param {object} styleMonth - To customize the style of the month displayed\r\n* @param {object} styleNameDay - To customize the style of the day names\r\n* @param {object} styleNumberDay - To customize the style of the days of the current month\r\n* @param {object} styleOutsideDay - To customize the style of days that do not belong to the current month\r\n* @param {object} stylePlaceholder - To change the placeholder style\r\n* @param {object} styleSelectedDay - To customize the selected day style\r\n* @param {object} styleYear - To customize the style of the year displayed\r\n* @returns {component} - Date picker\r\n*/\r\n\r\n/*\r\nplaceholder,\r\nhoverDay,\r\n*/\r\n\r\nfunction Datepicker ({ date, doubleLeft, doubleRight, label, left, placeholder, right, styleArrow, styleContainerNameDay, styleContainerNumberDay, styleDatePicker, styleHeader, styleInput, styleLabel, styleMonth, styleNameDay, styleNumberDay, styleOutsideDay, stylePlaceholder, styleSelectedDay, styleYear }) {\r\n    const [seletedDate, setSeletedDate] = useState(date)\r\n    const [seletedDay, setSeletedDay] = useState(seletedDate.toDateString().substring(8,10))\r\n    const [seletedMonth, setSeletedMonth] = useState(seletedDate.toDateString().substring(8,10))\r\n    const [seletedYear, setSeletedYear] = useState(seletedDate.toDateString().substring(11,15))\r\n    const [active, setActive] = useState(false)\r\n    const [year, setYear] = useState(date.getFullYear())\r\n    const [month, setMonth] = useState(date.getMonth())\r\n    const [nbDays, setnbDays] = useState(40 - new Date(year, month, 40).getDate())\r\n    const [firstDay, setfirstDay] = useState(new Date(year, month, 1).toDateString().substring(0,3))\r\n    const [previousMonthDays, setPreviousMonthDays] = useState([])\r\n    const [monthDays, setMonthDays] = useState([])\r\n    const [nextMonthDays, setNextMonthDays] = useState([])\r\n\r\n    const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n\r\n    useEffect(() => {\r\n        monthDetails()\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        setSeletedDay(seletedDate.toDateString().substring(8,10))\r\n        setSeletedMonth(seletedDate.toDateString().substring(4,7))\r\n        setSeletedYear(seletedDate.toDateString().substring(11,15))\r\n    },[seletedDate])\r\n\r\n    const monthDetails = () => {\r\n        const previousMonth = []\r\n        const endPreviousMonth = 40 - new Date(year, month - 1, 40).getDate()\r\n        const indexBegin = days.indexOf(firstDay)\r\n        for (let i = indexBegin-1; i >= 0; i--) {\r\n            previousMonth.push(endPreviousMonth - i)\r\n        }\r\n        setPreviousMonthDays(previousMonth)\r\n\r\n        const currentMonth = []\r\n        for (let i = 1; i <= nbDays; i++) {\r\n            currentMonth.push(i)\r\n        }\r\n        setMonthDays(currentMonth)\r\n\r\n        const nextMonth = []\r\n        const endArray = 42 - currentMonth.length - previousMonth.length\r\n        for (let i = 1; i <= endArray; i++) {\r\n            nextMonth.push(i)\r\n        }\r\n        setNextMonthDays(nextMonth)\r\n    }\r\n\r\n    const changeMonth = (nb) => {\r\n        if (month + nb === 12) {\r\n            setYear(year + 1)\r\n            setMonth(0)\r\n        } else if (month + nb === -1) {\r\n            setMonth(11)\r\n            setYear(year - 1)\r\n        } else {\r\n            setMonth(month + nb)\r\n        }\r\n    }\r\n\r\n    const changeYear = (nb) => {\r\n        setYear(year + nb)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setnbDays(40 - new Date(year, month, 40).getDate())\r\n        setfirstDay(new Date(year, month, 1).toDateString().substring(0,3))\r\n    },[year, month])\r\n\r\n    useEffect(() => {\r\n        monthDetails()\r\n    },[firstDay])\r\n\r\n    const selectDate = (e) => {\r\n        let day = e.target.innerHTML\r\n        setSeletedDate(new Date(year, month, day))\r\n        day = day.length === 1 ? \"0\" + day : day\r\n        const displayMonth = ((month + 1).toString().length) === 1 ? \"0\" + (month + 1) : (month + 1)\r\n        document.getElementById(\"datepicker\").value = displayMonth + \"/\" + day + \"/\" + year\r\n        setActive(false)\r\n        window.removeEventListener(\"keydown\", escape)\r\n        window.removeEventListener(\"click\", close)\r\n        document.body.click()\r\n    }\r\n\r\n    useEffect((e) => {\r\n        const escape = (e) => {\r\n            if (e.key === \"Escape\") {\r\n                setActive(false)\r\n                window.removeEventListener(\"keydown\", escape)\r\n                window.removeEventListener(\"click\", close)\r\n                document.getElementById(\"datepicker\").blur()\r\n            }\r\n        }\r\n\r\n        const close = (e) => {\r\n            if (!e.target.classList.contains(\"in\")) {\r\n                setActive(false)\r\n                window.removeEventListener(\"keydown\", escape)\r\n                window.removeEventListener(\"click\", close)\r\n            }\r\n        }\r\n\r\n        if (active) {\r\n            window.addEventListener(\"keydown\", escape)\r\n            window.addEventListener(\"click\", close)\r\n        }\r\n    },[active])\r\n\r\n    return (\r\n        <CONTAINER>\r\n            {label !== \"\" && <LABEL customStyle = {styleLabel}>{label}</LABEL>}\r\n            <INPUT customStyle = {styleInput} customPlaceholder = {stylePlaceholder} id = \"datepicker\" placeholder = {placeholder} onClick = {() => setActive(true)}/>\r\n            {active ?\r\n                <DATEPICKER customStyle = {styleDatePicker} className = \"in\">\r\n                    <HEADER customStyle = {styleHeader} className = \"in\">\r\n                        <IMG customStyle = {styleArrow} className = \"in\" onClick = {() => changeYear(-1)} src = {doubleLeft}/>\r\n                        <IMG customStyle = {styleArrow} className = \"in\" onClick = {() => changeMonth(-1)}  src = {left}/>\r\n                        <div className = \"in\">\r\n                            <YEAR customStyle = {styleYear} className = \"in\">{year}</YEAR>\r\n                            <MONTH customStyle = {styleMonth} className = \"in\">{months[month]}</MONTH>\r\n                        </div>\r\n                        <IMG customStyle = {styleArrow} className = \"in\" onClick = {() => changeMonth(1)} src = {right}/>\r\n                        <IMG customStyle = {styleArrow} className = \"in\" onClick = {() => changeYear(1)} src = {doubleRight}/>\r\n                    </HEADER>\r\n                    <NAMEDAYS customStyle = {styleContainerNameDay} className = \"in\">\r\n                        {days.map((day, index) => (\r\n                            <NAMEDAY customStyle = {styleNameDay} className = \"in\" key = {index}>\r\n                                {day}\r\n                            </NAMEDAY>\r\n                        ))}\r\n                    </NAMEDAYS>\r\n                    <DAYS customStyle = {styleContainerNumberDay} className = \"in\">\r\n                        {previousMonthDays.map((previousMonthDay, index) => (\r\n                            <OUTSIDEDAY customStyle = {styleOutsideDay} className = \"in\" key = {index}>\r\n                                {previousMonthDay}\r\n                            </OUTSIDEDAY>\r\n                        ))}\r\n                        {monthDays.map((monthDay, index) => (\r\n                            (monthDay == seletedDay && months[month].substring(0,3) === seletedMonth && year == seletedYear) ?\r\n                                <TODAY customStyle = {styleSelectedDay} className = \"in\" key = {index} onClick = {(e) => selectDate(e)}>\r\n                                    {monthDay}\r\n                                </TODAY>\r\n                            :\r\n                                <DAY customStyle = {styleNumberDay} className = \"in\" key = {index} onClick = {(e) => selectDate(e)}>\r\n                                    {monthDay}\r\n                                </DAY>\r\n                        ))}\r\n                        {nextMonthDays.map((nextMonthDay, index) => (\r\n                            <OUTSIDEDAY customStyle = {styleOutsideDay} className = \"in\" key = {index}>\r\n                                {nextMonthDay}\r\n                            </OUTSIDEDAY>\r\n                        ))}\r\n                    </DAYS>\r\n                </DATEPICKER>\r\n            :\r\n                null\r\n            }\r\n        </CONTAINER>\r\n    )\r\n}\r\n\r\nDatepicker.propTypes = {\r\n    date: PropTypes.instanceOf(Date).isRequired,\r\n    doubleLeft: PropTypes.string,\r\n    doubleRight: PropTypes.string,\r\n    label: PropTypes.string,\r\n    left: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    right: PropTypes.string,\r\n    styleArrow: PropTypes.object,\r\n    styleContainerNameDay: PropTypes.object,\r\n    styleContainerNumberDay: PropTypes.object,\r\n    styleDatePicker: PropTypes.object,\r\n    styleHeader: PropTypes.object,\r\n    styleInput: PropTypes.object,\r\n    styleMonth: PropTypes.object,\r\n    styleNameDay: PropTypes.object,\r\n    styleNumberDay: PropTypes.object,\r\n    styleOutsideDay: PropTypes.object,\r\n    styleSelectedDay: PropTypes.object,\r\n    styleYear: PropTypes.object,\r\n}\r\n\r\nDatepicker.defaultProps = {\r\n    doubleLeft: DoubleLeft,\r\n    doubleRight: DoubleRight,\r\n    label: \"\",\r\n    placeholder: \"\",\r\n    left: Left,\r\n    right: Right,\r\n    styleArrow: {},\r\n    styleContainerNameDay: {},\r\n    styleContainerNumberDay: {},\r\n    styleDatePicker: {},\r\n    styleHeader: {},\r\n    styleInput: {},\r\n    styleMonth: {},\r\n    styleNameDay: {},\r\n    styleNumberDay: {},\r\n    styleOutsideDay: {},\r\n    styleSelectedDay: {},\r\n    styleYear: {},\r\n}\r\n\r\nexport default Datepicker"],"mappings":"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","sourceRoot":""}